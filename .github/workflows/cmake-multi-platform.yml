name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
      - uses: actions/checkout@v4

      # Install system dependencies only for Linux (ubuntu-latest)
      - name: Install system dependencies (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxinerama-dev \
            libxcursor-dev \
            xorg-dev \
            libglu1-mesa-dev \
            pkg-config

      # Install vcpkg on Linux/macOS
      - name: Install vcpkg on Linux/macOS
        if: matrix.os != 'windows-latest'
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh

      # Install vcpkg on Windows
      - name: Install vcpkg on Windows
        if: matrix.os == 'windows-latest'
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat
          .\vcpkg\vcpkg.exe install glad
        shell: cmd  # Use Windows cmd for running the bat file

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
          echo "vcpkg-root=${{ github.workspace }}/vcpkg" >> "$GITHUB_OUTPUT"

      # Configure CMake on Windows
      - name: Configure CMake on Windows
        if: matrix.os == 'windows-latest'
        run: |
          cmake -B ${{ steps.strings.outputs.build-output-dir }} -DCMAKE_CXX_COMPILER=cl -DCMAKE_C_COMPILER=cl -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_TOOLCHAIN_FILE=${{ steps.strings.outputs.vcpkg-root }}\scripts\buildsystems\vcpkg.cmake -S ${{ github.workspace }}
        shell: cmd

      # Configure CMake on Linux/macOS
      - name: Configure CMake on Linux/macOS
        if: matrix.os != 'windows-latest'
        run: |
          cmake -B ${{ steps.strings.outputs.build-output-dir }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DCMAKE_TOOLCHAIN_FILE=${{ steps.strings.outputs.vcpkg-root }}/scripts/buildsystems/vcpkg.cmake \
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --build-config ${{ matrix.build_type }}

      - name: Upload release assets
        if: github.event_name == 'release'
        uses: actions/upload-artifact@v3
        with:
          name: Localite-${{ matrix.os }}-${{ matrix.build_type }}
          path: ${{ steps.strings.outputs.build-output-dir }}/
